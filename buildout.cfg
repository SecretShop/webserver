[buildout]
parts =
      django
      sphinx
      var-directory
eggs-directory = var/eggs
parts-directory = var/parts
develop-eggs-directory = var/develop-eggs

[versions]
django = 1.4

# Creates several subdirectories with var/ so that the django project
# can store database files and uploaded files
[var-directory]
recipe = z3c.recipe.mkdir
paths = var/db
      var/uploads

# Documentation generator
[sphinx]
recipe = zc.recipe.egg
eggs = Sphinx

# Tells the [django] part to install nose-achievements from git. It's
# not listed as a part in [buildout], but it gets installed since
# [django] depends on it.
[nose-achievements]
recipe = zerokspot.recipe.git
repository = git://github.com/exogen/nose-achievements.git
rev = 1d57f9e8e95ee0459876ea618b3ca3a34d629371
as_egg = True

# Tells the [django] part to install nose-achievements from git. It's
# not listed as a part in [buildout], but it gets installed since
# [django] depends on it.
[zinnia-theme-bootstrap]
recipe = zerokspot.recipe.git
repository = git@github.com:Fantomas42/zinnia-theme-bootstrap.git
rev = v0.1
as_egg = True

# Creates a django project for the app to live in
[django]
recipe = djangorecipe
project = webserver
settings = settings.development
extra-paths = ${nose-achievements:location}
eggs =
# Django Dependencies
     pillow             # Portable version of the Python Imaging Library
	 PyYAML				# Allows us to use YAML with django

# Django apps
     django-blog-zinnia         # Blog application
	 zinnia-theme-bootstrap		# Bootstrap theme for Zinna blog
     django-crispy-forms		# Makes for nice forms

# Developer Eggs (Packages to help us develop)
     ipython            # Gives us a fancy ipython interpreter for django shell
     readline           # Needed by ipython
     django-extensions  # Provides some extra django management commands
     werkzeug           # Used by django-extensions
     django-nose        # Django-nose allows us to run tests with nose
     nose-achievements  # Testing achievements
     yanc               # Allows for colorized output from nose tests
     coverage           # Coverage determines what code is covered by the unit tests
     django-debug-toolbar       # Toolbar to help web debugging
     django-admin-tools # Admin tools
	 feedparser			# Used by django-admin-tools
